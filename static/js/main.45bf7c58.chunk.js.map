{"version":3,"sources":["components/front/Header/Header.js","components/front/Recipes/Favorite.js","components/front/Recipes/RandomCart.js","Placeholder.png","components/front/Recipes/AddDishLogic.js","components/front/Routes/Routes.js","App.js","reportWebVitals.js","index.js"],"names":["Header","handleShow","Navbar","bg","variant","expand","Container","Toggle","aria-controls","Collapse","id","Nav","className","Link","as","to","Button","onClick","Recipes","favorite","removedToFavorite","Row","xs","md","map","item","Col","Card","Img","src","strMealThumb","alt","Body","Title","strMeal","Text","strInstructions","idMeal","RandomCart","items","recipesApi","addToFavorite","ButtonGroup","AddDishLogic","show","handleClose","useState","addRecipe","setnewRecipe","useEffect","dishFavorites","JSON","parse","localStorage","getItem","setRecipe","recipe","handleInputs","e","name","target","value","saveToLocalStorage","setItem","stringify","Modal","onHide","centered","onSubmit","preventDefault","newRecipe","Date","getTime","toString","addFavoriteList","alert","Form","Group","controlId","Label","Control","type","placeholder","onChange","rows","Footer","img","Placeholder","filter","removeItem","removeTask","Routes","setItems","isLoaded","setIsLoaded","error","setError","axios","get","then","res","data","meals","setFavorite","message","path","exact","find","favoriteItem","newFavoriteList","Favorite","App","setShow","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.45bf7c58.chunk.js","sourcesContent":["import {Nav,Navbar,Container,Button} from \"react-bootstrap\"\r\nimport {Link} from \"react-router-dom\";\r\nconst Header = ({handleShow}) => {\r\n    return (\r\n        \r\n<Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\r\n  <Container>\r\n    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n      <Nav className=\"mx-auto \">\r\n        <Nav.Link as={Link} to=\"/\">Home</Nav.Link>\r\n        <Nav.Link as={Link} to=\"/favorite\">Favorite</Nav.Link>\r\n      </Nav>\r\n      <Nav className=\"/favorite ml-auto\">\r\n          <Link to=\"/favorite\">\r\n          <Button className = \"btn\" onClick={handleShow}>+ Add New Recipe</Button>\r\n          </Link>\r\n      \r\n      </Nav>\r\n    </Navbar.Collapse>\r\n  </Container>\r\n</Navbar>\r\n\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import {Card, Col,Row,Button} from \"react-bootstrap\"\r\nimport \"./Card-style.css\"\r\n\r\nconst Recipes = ({favorite,removedToFavorite}) => {\r\n\r\n    \r\n\r\n  \r\n    return (\r\n        <Row xs={1} md={3} className=\"g-4\">\r\n            \r\n          {favorite.map((item) => (\r\n           \r\n             <Col className=\"container-fluid d-flex justify-content-center\">\r\n             <Card className=\"card text-center shadow\">\r\n              <div  key={item.idMeal}>\r\n                    <div className=\"overflow\">\r\n                    <Card.Img src={item.strMealThumb} alt=\"foods\" className=\"card-img-top\"/>\r\n                    </div>\r\n                    <Card.Body className=\"card-body text-dark\">\r\n                    <Card.Title className=\"card-title\">{item.strMeal}</Card.Title>\r\n                    <Card.Text className=\"card-text text-secondary\">{item.strInstructions}</Card.Text>\r\n                    <Button variant=\"outline-danger\" onClick={() => removedToFavorite(item)}>Delete</Button>\r\n                    </Card.Body>\r\n                \r\n                    \r\n          \r\n               \r\n              </div>\r\n              </Card>\r\n              </Col>\r\n              \r\n            \r\n    ))}     \r\n           </Row>  \r\n    )\r\n}\r\n\r\n export default Recipes \r\n\r\n","import {ButtonGroup} from \"react-bootstrap\"\r\nimport \"./Card-style.css\";\r\nconst RandomCart = ({items,recipesApi,addToFavorite}) => {\r\n  return (\r\n    <div className=\"card text-center\">\r\n        \r\n    {items.map(item => (\r\n\r\n        <div key={item.idMeal}>\r\n          <div className=\"overflow\">\r\n              <img src={item.strMealThumb} alt=\"foods\" className=\"card-img-top\"/>\r\n          </div>\r\n              <div className=\"card-body text-dark\">\r\n              <h4 className=\"card-title\">{item.strMeal}</h4>\r\n              <p className=\"card-text text-secondary\">{item.strInstructions}</p>\r\n          </div>\r\n            <div>\r\n              <ButtonGroup>\r\n                <button className=\"btn btn-outline-success\" onClick={() => addToFavorite(item)}>Like</button>\r\n                <button className=\"btn btn-outline-primary\" onClick={recipesApi}>Skip</button>\r\n              </ButtonGroup>\r\n            </div> \r\n        </div>\r\n      ))}\r\n  \r\n  </div>\r\n  )\r\n}\r\n\r\nexport default RandomCart\r\n","export default __webpack_public_path__ + \"static/media/Placeholder.a14cc3ff.png\";","import React, {useState,useEffect} from \"react\";\r\n//import Modal from \"../../../Modal\";\r\nimport { Modal,Button,Card, Col,Row,Container } from \"react-bootstrap\";\r\nimport \"./Card-style.css\"\r\nimport Form from 'react-bootstrap/Form';\r\nimport Placeholder from \"../../../Placeholder.png\"\r\n\r\n\r\n\r\nfunction AddDishLogic({show, handleClose,handleShow}) {\r\n\r\n\r\nconst [addRecipe,setnewRecipe] = useState({\r\n    strMeal:\"\",\r\n    strInstructions:\"\"\r\n});\r\n\r\n// to get the data from LS\r\n/*\r\nconst getLocalItmes = () => {\r\n  let list = localStorage.getItem('your-favorites');\r\n  console.log(list);\r\n\r\n  if (list) {\r\n      return JSON.parse(localStorage.getItem('your-favorites'));\r\n  } else {\r\n      return [];\r\n  }\r\n}\r\n*/\r\nuseEffect(() => {\r\n  const dishFavorites = JSON.parse(\r\n    localStorage.getItem('list')\r\n  );\r\n  \r\n  if(dishFavorites) {\r\n    setRecipe(dishFavorites);\r\n  }\r\n  \r\n}, []);\r\n///////////////////////////////////////////////////////////////////////////////////////getLocalItmes()\r\nconst [recipe, setRecipe] = useState([]);\r\n\r\nconst handleInputs = (e) => {\r\nconst name=e.target.name\r\nconst value=e.target.value\r\nsetnewRecipe({...addRecipe,[name] : value})\r\n}\r\n\r\nconst handleSubmit = (e) => {\r\n\r\ne.preventDefault();\r\n\r\n\r\n\r\nif(!addRecipe.strMeal || !addRecipe.strInstructions){\r\n  \r\n  alert(\"Please, complete all fields !\")\r\n\r\n}else{\r\n\r\n  const newRecipe = {...addRecipe, idMeal:new Date().getTime().toString()}\r\n  //setRecipe([...recipe, newRecipe]);\r\n  const addFavoriteList = ([...recipe, newRecipe])\r\n  setRecipe(addFavoriteList);\r\n  saveToLocalStorage(addFavoriteList);//saved\r\n\r\n\r\n  setnewRecipe({        //clear felds\r\n    strMeal:\"\",\r\n    strInstructions:\"\"})\r\n\r\n} }\r\n\r\nconst removeTask = (item) => {\r\n    //setRecipe([...recipe.filter((item) => item.id !== id)]);\r\n    const addFavoriteList = recipe.filter((removeItem) => removeItem.idMeal !== item.idMeal);\r\n    setRecipe(addFavoriteList);\r\n    saveToLocalStorage(addFavoriteList);//removed\r\n}\r\n\r\n//add data to localStorage\r\nconst saveToLocalStorage = (recipe) => {\r\n  localStorage.setItem('list', JSON.stringify(recipe))\r\n}\r\n/*\r\nuseEffect(() => {\r\n  localStorage.setItem('your-favorites', JSON.stringify(recipe))\r\n}, [recipe]);\r\n*/\r\n\r\nreturn (\r\n  <div className=\"app\">\r\n    <Modal show={show} onHide={handleClose} centered>\r\n      <Modal.Header>\r\n      <Modal.Title>Add new recipe</Modal.Title>\r\n      </Modal.Header>\r\n      <form onSubmit={handleSubmit}>\r\n      <Modal.Body>\r\n\r\n      <Container>\r\n      <Form>\r\n        <Form.Group controlId=\"form.Name\">\r\n            <Form.Label>Title</Form.Label>\r\n            <Form.Control type=\"text\" \r\n            placeholder=\"Title...\" \r\n            name=\"strMeal\"\r\n            value={addRecipe.strMeal}\r\n            onChange={handleInputs}\r\n            />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"form.Textarea\">\r\n            <Form.Label>Recipe</Form.Label>\r\n            <Form.Control as=\"textarea\" rows={3} \r\n            name=\"strInstructions\"\r\n            value={addRecipe.strInstructions}\r\n            onChange={handleInputs}\r\n            />\r\n        </Form.Group>\r\n      </Form>\r\n    </Container>\r\n\r\n        </Modal.Body>\r\n\r\n        <Modal.Footer>\r\n\r\n          <Button type=\"submit\"onClick={handleClose} >Add</Button>\r\n          \r\n        </Modal.Footer>\r\n        </form>\r\n      </Modal>\r\n\r\n      <Row xs={1} md={3} className=\"g-4\">\r\n      {recipe.map((item)=>(\r\n          <Col className=\"container-fluid d-flex justify-content-center\">\r\n          <Card className=\"card text-center shadow\">\r\n          <div key={item.idMeal}>\r\n          <div className=\"overflow\">\r\n          <Card.Img img src={Placeholder} alt=\"Placeholder\" className=\"card-img-top\"/>\r\n          </div>\r\n\r\n          <Card.Body className=\"card-body text-dark\">\r\n          <Card.Title className=\"card-title\">{item.strMeal}</Card.Title>\r\n          <Card.Text className=\"card-text text-secondary\">{item.strInstructions}</Card.Text>\r\n          <Button variant=\"outline-danger\" onClick={() => removeTask(item)}>Delete</Button>\r\n          </Card.Body>\r\n            </div>\r\n            </Card>\r\n              </Col>\r\n        \r\n      ))}\r\n      </Row>\r\n\r\n      </div>\r\n);\r\n        }\r\nexport default AddDishLogic;","import axios from \"axios\";\r\nimport \"../Recipes/Card-style.css\"\r\nimport React, { useState,useEffect } from \"react\";\r\nimport Favorite from \"./../Recipes/Favorite\";\r\nimport RandomCart from \"../Recipes/RandomCart\";\r\nimport AddDishLogic from \"../Recipes/AddDishLogic\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\n\r\nconst Routes = ({show, handleClose,handleShow}) => {\r\n\r\n    const [items, setItems] = useState([]);\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const [error, setError] = useState(null);\r\n    \r\n  \r\n   const recipesApi =  () => {\r\n     axios\r\n        .get(\"https://www.themealdb.com/api/json/v1/1/random.php\")\r\n        .then(res => {\r\n          setItems(res.data.meals);\r\n        })\r\n        .then(\r\n        \r\n          (error) => {\r\n            setIsLoaded(true);\r\n            setError(error);\r\n          }\r\n        )\r\n        }\r\n  \r\n  \r\n        useEffect(() => {\r\n          recipesApi();\r\n          \r\n    }, []);\r\n  \r\n\r\n\r\n    const [favorite, setFavorite] = useState([]);\r\n\r\n        // to get the data from LS\r\n\r\n    useEffect(() => {\r\n      const dishFavorites = JSON.parse(\r\n        localStorage.getItem('your-favorites')\r\n      );\r\n      \r\n      if(dishFavorites) {\r\n        setFavorite(dishFavorites);\r\n      }\r\n      \r\n    }, []);\r\n  \r\n        //add data to localStorage\r\n    const saveToLocalStorage = (favorite) => {\r\n      localStorage.setItem('your-favorites', JSON.stringify(favorite))\r\n    }\r\n  \r\n    const addToFavorite = (item) => {\r\n\r\n      const Fav = favorite.find((favoriteItem) => favoriteItem.idMeal === item.idMeal);\r\n      if(Fav){\r\n        return(item.idMeal);\r\n      }\r\n      \r\n      const newFavoriteList = ([...favorite, item]);\r\n        setFavorite(newFavoriteList);\r\n        saveToLocalStorage(newFavoriteList);//saved\r\n     \r\n    };\r\n  \r\n    const removedToFavorite = (item) => {\r\n      const newFavoriteList = favorite.filter(\r\n        (favoriteItem) => favoriteItem.idMeal !== item.idMeal\r\n      );\r\n      setFavorite(newFavoriteList);\r\n      saveToLocalStorage(newFavoriteList);//removed\r\n    };\r\n  \r\n    \r\n    if (error) {\r\n      return <div>Error: {error.message}</div>;\r\n    } else if (!isLoaded) {\r\n      return <div>Loading...</div>;\r\n    } else {\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Switch>\r\n                <Route path=\"/\" exact>\r\n                    <div className=\"container-fluid d-flex justify-content-center\">\r\n                            <RandomCart\r\n                            items={items}\r\n                            recipesApi={recipesApi}\r\n                            addToFavorite={addToFavorite}\r\n                            /> \r\n                            </div>  \r\n                </Route>\r\n                    \r\n                    \r\n                     \r\n                <Route path=\"/favorite\" exact>\r\n                    \r\n                            <Favorite\r\n                            favorite={favorite}\r\n                            removedToFavorite={removedToFavorite}\r\n                            />\r\n                             <AddDishLogic\r\n                             show={show}\r\n                             handleClose={handleClose}\r\n                             handleShow={handleShow}\r\n                             />\r\n                </Route>\r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\n}\r\nexport default Routes\r\n","import Header from \"./components/front/Header/Header\";\nimport Routes from \"./components/front/Routes/Routes\";\nimport React, {useState} from \"react\";\nimport {BrowserRouter as Router} from \"react-router-dom\";\n\n\nconst App = () => {\n \n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  \n  return (\n    <div>\n      <Router>\n        <Header\n        handleShow={handleShow}\n        />\n          <Routes \n          show={show}\n          handleClose={handleClose}\n          handleShow={handleShow}\n          />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}